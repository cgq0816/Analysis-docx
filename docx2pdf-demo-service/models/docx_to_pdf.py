# -*- coding:utf-8 -*-

# doc2pdf.py: python script to convert doc to pdf with bookmarks!
# Requires Office 2007 SP2
# Requires python for win32 extension


import sys, os
from win32com.client import Dispatch, constants, gencache
import oss2
import uuid
import traceback
import requests
import io


class Doc2pdf(object):

    def doc2pdf(self,input, output):
        w = Dispatch("Word.Application")
        try:
            doc = w.Documents.Open(input, ReadOnly=1)
            doc.ExportAsFixedFormat(output, constants.wdExportFormatPDF, \
                                    Item=constants.wdExportDocumentWithMarkup,
                                    CreateBookmarks=constants.wdExportCreateHeadingBookmarks)
            return 0
        except:
            return 1
        finally:
            w.Quit(constants.wdDoNotSaveChanges)


    # Generate all the support we can.
    def GenerateSupport(self):
        # enable python COM support for Word 2007
        # this is generated by: makepy.py -i "Microsoft Word 12.0 Object Library"
        gencache.EnsureModule('{00020905-0000-0000-C000-000000000046}', 0, 8, 4)

    def get_pdf(self,doc_url, file_path, c=1):
        try:
            print(doc_url)
            r = requests.get(doc_url)
            f = io.open(file_path, "wb")
            f.write(r.content)
            f.close()
        except Exception as e:
            if c < 6:
                c += 1
                print("get_pdf() again!")
                self.get_pdf(doc_url, file_path, c)
            print("get_pdf() error!")

    def analysis(self,doc_url):
        print(len(sys.argv))
        # if (len(sys.argv) == 2):
        #     input = sys.argv[1]
        #     output = os.path.splitext(input)[0] + '.pdf'
        # elif (len(sys.argv) == 3):
        #     input = sys.argv[1]
        #     output = sys.argv[2]
        # else:

        file_path = './docx_data/temp.docx'
        self.get_pdf(doc_url, file_path)
        input = u'temp.docx'  # word文档的名称
        output = './pdf_data/temp.pdf'  # pdf文档的名称
        if (not os.path.isabs(file_path)):
            file_path = os.path.abspath(file_path)
        if (not os.path.isabs(output)):
            output = os.path.abspath(output)
        try:
            self.GenerateSupport()
            rc = self.doc2pdf(file_path, output)

            # date_chunk_handle = Date_chunk_handle()
            # str_,idx = date_chunk_handle.con_extra_time(s)
            # print(str_)
            # print(idx)
            # flag = 0
            # t_lists = []
            # time_chunk_list = date_chunk_handle.get_date_chunk(s)
            # recursion_time_chunk = date_chunk_handle.recursion_processing(s, t_lists, date_chunk_handle, flag,
            #                                                               time_chunk_list)
            # # print(recursion_time_chunk)
            # normalize_list = date_chunk_handle.normalize_datetime(recursion_time_chunk)
            # # print(normalize_list)
            # time_stamp_list = date_chunk_handle.parse_datetime(normalize_list, publishAt)
            # print(time_stamp_list)
            # print("******************************************************************************")

            # options = {
            #     'page-size': 'A4',
            #     'margin-top': '0mm',
            #     'margin-right': '0mm',
            #     'margin-bottom': '0mm',
            #     'margin-left': '0mm',
            #     # 'orientation':'Landscape',#横向
            #     'encoding': "UTF-8",
            #     'no-outline': None,
            #     # 'footer-right':'[page]' 设置页码
            # }

            # url = 'http://www.taobao.com'  # url为需要导成pdf的html链接，换成自己的链接就可以了
            # urls = output.strip('http://')
            # urls = urls.strip('https://')
            # urls = urls.replace('/', '_')

            # loc_url = './pdf_data/{}.pdf'.format(str(output))
            # pdfkit.from_url(url, loc_url, options=options)

            # 阿里云主账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM账号进行API访问或日常运维，请登录 https://ram.console.aliyun.com 创建RAM账号。
            auth = oss2.Auth('LTAI7dt9UCbIHiTr', '9otEPj4CrhG576kluYz2cTZ2x3e1jT')
            # Endpoint以杭州为例，其它Region请按实际情况填写。
            bucket = oss2.Bucket(auth, 'https://oss-cn-beijing.aliyuncs.com/', 'html-pdf')

            # <yourLocalFile>由本地文件路径加文件名包括后缀组成，例如/users/local/myfile.txt
            schema_id = str(uuid.uuid1()).replace('-', '')
            bucket.put_object_from_file(schema_id, output)
            pdf_url = 'https://html-pdf.oss-cn-beijing.aliyuncs.com/{}'.format(schema_id)
            os.remove(file_path)
            os.remove(output)

            # if pdfkit:
            #     result_json = json.dumps(pdfkit, ensure_ascii=False)
            #     self.write(result_json)
            #     logging.info('write result json finisehd!')
            return pdf_url
        except:
            print(traceback.format_exc())
            return -1


if __name__ == '__main__':
    print("hello")
    doc_url = 'aaaaa'
    doc_urls = Doc2pdf()
    rc = doc_urls.analysis(doc_url)
    if rc:
        sys.exit(rc)
    sys.exit(0)